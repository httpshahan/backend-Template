# Render Deployment Configuration
# This file defines the deployment settings for Render.com

services:
  # Backend API Service
  - type: web
    name: backend-api
    env: node
    plan: starter # Change to 'standard' or 'pro' for production
    buildCommand: npm ci --production
    startCommand: npm start
    healthCheckPath: /api/v1/health
    envVars:
      - key: NODE_ENV
        value: production
      - key: PORT
        value: '10000'
      - key: API_VERSION
        value: v1
      - key: DB_HOST
        fromService:
          type: pserv
          name: mysql-db
          property: host
      - key: DB_PORT
        fromService:
          type: pserv
          name: mysql-db
          property: port
      - key: DB_NAME
        value: backend_template_prod
      - key: DB_USER
        fromService:
          type: pserv
          name: mysql-db
          property: user
      - key: DB_PASS
        fromService:
          type: pserv
          name: mysql-db
          property: password
      - key: DB_DIALECT
        value: mysql
      - key: REDIS_HOST
        fromService:
          type: redis
          name: redis-cache
          property: host
      - key: REDIS_PORT
        fromService:
          type: redis
          name: redis-cache
          property: port
      - key: JWT_SECRET
        generateValue: true
      - key: JWT_EXPIRE
        value: 7d
      - key: RATE_LIMIT_WINDOW_MS
        value: '900000'
      - key: RATE_LIMIT_MAX_REQUESTS
        value: '100'
      - key: LOG_LEVEL
        value: info
      - key: LOG_FILE_ENABLED
        value: 'false'
      - key: CORS_ORIGIN
        value: '*' # Update with your frontend URL
    # Auto-deploy on git push
    autoDeploy: true
    # Custom domains (optional)
    # domains:
    #   - api.yourdomain.com

  # MySQL Database Service
  - type: pserv
    name: mysql-db
    env: docker
    image:
      url: mysql:8.0
    disk:
      name: mysql-data
      mountPath: /var/lib/mysql
      sizeGB: 10
    envVars:
      - key: MYSQL_ROOT_PASSWORD
        generateValue: true
      - key: MYSQL_DATABASE
        value: backend_template_prod
      - key: MYSQL_USER
        value: backend_user
      - key: MYSQL_PASSWORD
        generateValue: true
    healthCheckPath: /

  # Redis Cache Service
  - type: redis
    name: redis-cache
    plan: starter
    # Auto-scaling configuration
    # plan: standard # For production with persistence

# Database configuration
databases: []
# Static sites (if you have a frontend)
# - type: static
#   name: frontend
#   buildCommand: npm run build
#   publishPath: ./dist
#   pullRequestPreviewsEnabled: true
