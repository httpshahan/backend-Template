# Render Production Environment Configuration
# This file defines the production deployment settings for Render.com

services:
  # Production Backend API Service
  - type: web
    name: backend-api-production
    env: node
    plan: standard # Paid plan for production (no sleep, better performance)
    buildCommand: npm ci --production
    startCommand: npm run render:start
    healthCheckPath: /api/v1/health
    # Enable auto-deployment on git push to main/master branch
    autoDeploy: true
    branch: main # or master - Track main branch for production
    # Disable PR previews for production service
    pullRequestPreviewsEnabled: false
    envVars:
      - key: NODE_ENV
        value: production
      - key: PORT
        value: '10000'
      - key: API_VERSION
        value: v1
      - key: DB_HOST
        fromService:
          type: pserv
          name: mysql-db-production
          property: host
      - key: DB_PORT
        fromService:
          type: pserv
          name: mysql-db-production
          property: port
      - key: DB_NAME
        value: backend_template_prod
      - key: DB_USER
        fromService:
          type: pserv
          name: mysql-db-production
          property: user
      - key: DB_PASS
        fromService:
          type: pserv
          name: mysql-db-production
          property: password
      - key: DB_DIALECT
        value: mysql
      - key: REDIS_HOST
        fromService:
          type: redis
          name: redis-cache-production
          property: host
      - key: REDIS_PORT
        fromService:
          type: redis
          name: redis-cache-production
          property: port
      - key: JWT_SECRET
        generateValue: true
      - key: JWT_EXPIRE
        value: 7d
      - key: RATE_LIMIT_WINDOW_MS
        value: '900000'
      - key: RATE_LIMIT_MAX_REQUESTS
        value: '100'
      - key: LOG_LEVEL
        value: warn
      - key: LOG_FILE_ENABLED
        value: 'true'
      - key: ENABLE_API_DOCS
        value: 'false'
      - key: ENABLE_DEBUG_ROUTES
        value: 'false'
      - key: CORS_ORIGIN
        value: 'https://app.yourdomain.com' # Update with your production frontend URL
      - key: EMAIL_FROM
        value: noreply@yourdomain.com
    # Auto-deploy on git push
    autoDeploy: true
    # Custom domains for production
    # domains:
    #   - api.yourdomain.com

  # Production MySQL Database Service
  - type: pserv
    name: mysql-db-production
    env: docker
    image:
      url: mysql:8.0
    disk:
      name: mysql-data-production
      mountPath: /var/lib/mysql
      sizeGB: 20  # Larger disk for production
    plan: standard  # Paid plan for production
    envVars:
      - key: MYSQL_ROOT_PASSWORD
        generateValue: true
      - key: MYSQL_DATABASE
        value: backend_template_prod
      - key: MYSQL_USER
        value: backend_user_prod
      - key: MYSQL_PASSWORD
        generateValue: true

  # Production Redis Cache Service
  - type: redis
    name: redis-cache-production
    plan: standard  # Paid plan for production with persistence

# Database configuration
databases: []
# Static sites (if you have a frontend)
# - type: static
#   name: frontend
#   buildCommand: npm run build
#   publishPath: ./dist
#   pullRequestPreviewsEnabled: true
